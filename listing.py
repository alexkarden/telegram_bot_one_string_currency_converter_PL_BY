import configparser
import telebot
import requests
import json

config = configparser.ConfigParser()
config.read("settings.ini")
url_cur = config["telegrambot"]["urlcur"]
bot = telebot.TeleBot(config["telegrambot"]["token"])


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '–û–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–π –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç üáµüá±PLN/BYNüáßüáæ.\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É.')

@bot.message_handler(content_types=['animation', 'audio', 'document', 'photo', 'sticker', 'story', 'video', 'video_note', 'voice', 'contact', 'dice', 'game', 'poll', 'venue', 'location', 'invoice', 'successful_payment', 'connected_website', 'passport_data', 'web_app_data'])
def start(message):
    bot.send_message(message.chat.id, '–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏.\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É.')

@bot.message_handler(commands=['about'])
def about(message):
    bot.send_message(message.from_user.id, ' <b>–°–∫—Ä–∏–ø—Ç –Ω–∞–ø–∏—Å–∞–ª Alex Karden -</b> github.com/alexkarden\n\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É.', parse_mode='html')

@bot.message_handler(commands=['help'])
def about(message):
    bot.send_message(message.from_user.id, ' <b>–ü–æ–º–æ—â—å</b>\n–ß–∞—Å—Ç–æ –±—ã–≤–∞–µ—Ç, –Ω–∞—Ö–æ–¥—è—Å—å –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π, –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ —Ü–µ–Ω –Ω–∞ —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≤–µ–∑—Ç–∏ –∫ —Å–µ–±–µ –¥–æ–º–æ–π, –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ –≤—ã–≥–æ–¥–Ω–∞—è –ª–∏ —Ü–µ–Ω–∞ –∏–ª–∏ –Ω–µ—Ç. –î–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –ª—é–¥–∏ –Ω–∞—á–∏–Ω–∞—é—Ç –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä—ã –≤–∞–ª—é—Ç –∏ —Ä–∞—Å—á–∏—Ç—ã–≤–∞—Ç—å —Ü–µ–Ω—É –≤ —Å–≤–æ–µ–π –≤–∞–ª—é—Ç–µ, —Ç—Ä–∞—Ç—è –Ω–∞ —ç—Ç–æ –≤—Ä–µ–º—è –∏ –º–æ–±–∏–ª—å–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫. –≠—Ç–æ—Ç –±–æ—Ç —Å—Ä–∞–∑—É –∂–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –∏ –ø–æ—Ç—Ä–µ–±–ª—è–µ–º –º–∏–Ω–∏–º—É–º —Ç—Ä–∞—Ñ–∏–∫–∞.\n\n–ë–æ—Ç –∑–∞–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å —Å–∞–π—Ç–∞ nbrb.by –ø–æ api —Å—Ä–∞–∑—É –∂–µ –∫–∞–∫ –≤—ã –≤–≤–µ–¥–µ—Ç–µ —Å—É–º–º—É. –î–ª—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.\n\n–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ –ø–æ–ª—å—Å–∫–∏—Ö –∑–ª–æ—Ç—ã—Ö –∏ –±–æ—Ç —Å—Ä–∞–∑—É –∂–µ —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –µ—ë –≤ –±–µ–ª–æ—Ä—É—Å—Å–∫–∏–µ —Ä—É–±–ª–∏.', parse_mode='html')



@bot.message_handler(content_types=['text'])
def summa(message):
    try:
        amount = float(message.text.strip().replace(',', '.'))
    except Exception:
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É.')
        return

    if amount > 0:
        try:
            r_cur = requests.get(url_cur)
            obj_cur = json.loads(r_cur.text)
            s = round(amount * obj_cur["Cur_OfficialRate"] / 10, 2)
        except Exception:
            bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É')
            return
        bot.send_message(message.chat.id, f'<b>{s} BYN</b>\n–ú–æ–∂–µ—Ç–µ –∑–∞–Ω–æ–≤–æ –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É.', parse_mode='html')

    else:
        bot.send_message(message.chat.id, '–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –∑–∞ 0. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É.')

bot.polling(none_stop=True)
